version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - odoo_network
    depends_on:
      - backend

  backend:
    build: 
      context: ./backend4
      dockerfile: Dockerfile
    volumes:
      - ./backend4/configs:/app/configs  # Mount the config directory
    environment:
      - CONFIG_PATH=/app/configs
    ports:
      - "8080:8080"
    networks:
      - odoo_network
    depends_on:
      - redis
      - rabbitmq
      - odoo
      - db

  redis:
    image: redis:alpine
    command: redis-server --bind 0.0.0.0
    ports:
      - "6379:6379"
    networks:
      - odoo_network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - odoo_network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 5s
      timeout: 3s
      retries: 5

  odoo:
    image: odoo:16
    ports:
      - "8069:8069"
    environment:
      - HOST=db
      - USER=odoo
    networks:
      - odoo_network
    depends_on:
      - db

  db:
    image: postgres:13
    environment:
      - POSTGRES_DB=odoo16db
      - POSTGRES_PASSWORD=96sh-bab7-h8ye
      - POSTGRES_USER=odoo
    volumes:
      - ./postgresql:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - odoo_network

networks:
  odoo_network:
    driver: bridge